[{"/Users/adhnanasharaf/Projects/React/ecommerse/client/src/index.js":"1","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/App.js":"2","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/CartPage.js":"3","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/Context.js":"4","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/ProductList.js":"5","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/Login.js":"6","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/AddProducts.js":"7","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/ProductItem.js":"8","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/withContext.js":"9","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/CartItem.js":"10"},{"size":300,"mtime":1621348792557,"results":"11","hashOfConfig":"12"},{"size":7532,"mtime":1631438723335,"results":"13","hashOfConfig":"12"},{"size":1066,"mtime":1626248597132,"results":"14","hashOfConfig":"12"},{"size":88,"mtime":1620922382924,"results":"15","hashOfConfig":"12"},{"size":1054,"mtime":1631439212649,"results":"16","hashOfConfig":"12"},{"size":1937,"mtime":1625141111955,"results":"17","hashOfConfig":"12"},{"size":3539,"mtime":1629960873467,"results":"18","hashOfConfig":"12"},{"size":1166,"mtime":1622006576388,"results":"19","hashOfConfig":"12"},{"size":378,"mtime":1630049533687,"results":"20","hashOfConfig":"12"},{"size":1468,"mtime":1626838818807,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pqd1k7",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adhnanasharaf/Projects/React/ecommerse/client/src/index.js",[],"/Users/adhnanasharaf/Projects/React/ecommerse/client/src/App.js",["48","49","50","51","52","53","54","55","56"],"import React, { useState, Component } from \"react\";\nimport {\n  Switch,\n  Route,\n  Link,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Cart from \"./components/CartPage\";\nimport Login from \"./components/Login\";\nimport ProductList from \"./components/ProductList\";\nimport AddProducts from \"./components/AddProducts\";\n\n\nimport axios from \"axios\";\n\nimport jwt_decode from \"jwt-decode\";\nimport { render } from \"@testing-library/react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\n\n\n\n\nimport Context from \"./Context\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      cart: [],\n      products: [],\n      showMenu: null,\n  admin:  false\n\n    };\n    this.routerRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          login: this.login,\n          addToCart: this.addToCart,\n          cart: this.state.cart,\n          removeFromCart:this.removeFromCart,\n          changingQuantity:this.changingQuantity,\n          AddProducts:this.AddProducts,\n          ShowAllProducts:this.  ShowAllProducts\n        }}\n      >\n        <Router ref={this.routerRef}>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"\">Ecommerse</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href={this.state.user ? \"/cart\" : \"/login\"}>\n                  Cart\n                </Nav.Link>\n                <Nav.Link href=\"/\">Products</Nav.Link>\n                {this.state.admin === true ?( <Nav.Link href=\"/Add-products\">Add Products</Nav.Link>)\n                 :\"\"\n                }\n                \n\n                <NavDropdown\n                  title={!this.state.user ? \"account\" : this.state.user[0]}\n                  id=\"basic-nav-dropdown\"\n                >\n                  {!this.state.user ? (\n                  <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\n                  ) : (\n                  <NavDropdown.Item onClick={this.logout}>\n                    Logout\n                  </NavDropdown.Item>\n                  )}\n                </NavDropdown>\n              </Nav>\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                />\n                <Button variant=\"outline-success\">Search</Button>\n              </Form>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Switch>\n            <Route exact path=\"/cart\">\n              <Cart \n               removeFromCart = {this.removeFromCart}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              \n              <ProductList\n                products={this.state.products}\n                addToCart={this.addToCart}\n               \n              />\n            </Route>\n            <Route exact path=\"/Login\">\n              <Login login={this.login} />\n            </Route>\n\n          \n\n            <Route exact path=\"/Add-products\">\n              <AddProducts />\n            </Route>\n          </Switch>\n        </Router>\n      </Context.Provider>\n    );\n  }\n\n  async componentDidMount() {\n    const api = await axios.get(\"/api\");\n    console.log(api)\n    let user = localStorage.getItem(\"user\");\n    let cart = localStorage.getItem(\"cart\");\n    let admin = localStorage.getItem(\"admin\");\n    console.log(admin)\n console.log(user)\n\n   const products = await axios.get(\"/products\");\n   console.log(products.data.products)  \n\n    user = user ? JSON.parse(user) : null;\n    cart = cart ? JSON.parse(cart) : [];\n    let arrUser = null;\n    user\n      ? (arrUser = Object.keys(user).map((index) => {\n          let person = user[index];\n          return person;\n        }))\n      : (arrUser = null);\n    this.setState({ user: arrUser, products: products.data.products, cart ,admin});\n    console.log(\"app\", this.state.cart);\n    // console.log(this.state.user);\n    console.log(this.state.admin);\n    //localStorage.removeItem(\"cart\");\n  } \n  login = async (email, password) => {\n    const res = await axios\n      .post(\"/login\", { email, password })\n      .catch((res) => {\n        \n        return { status: 404, message: \"unauthorised user\" };\n      });\n\n    if (res.data === true) {\n      console.log(\"authentication process cleared\");\n\n\n      const user = {\n        email,\n        accessToken: email === \"admin@example.com\" ? 0 : 1,\n        \n      };\n      if(email === \"admin@example.com\"){\n        let admin = this.state.admin;\n        admin = true;\n        this.setState({admin})\n        localStorage.setItem(\"admin\", ({admin}));\n      }\n\n      const arrUser = Object.keys(user).map((index) => {\n        let person = user[index];\n        return person;\n      });\n      this.setState({ arrUser }, () => {});\n\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      <Redirect to=\"/\" />;\n      console.log(\"login fully successed\");\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  addToCart = (cartItem) => {\n    console.log(\"cart item form top of the add tocart cartItem\", cartItem);\n    let cart = this.state.cart;\n    console.log(\"from top of the addtocart\", cart);\n\n    console.log(cart);\n    console.log(cartItem.id);\n    // console.log(cart.includes(cartItem.id))\n\n    const found = cart.some((el) => el.id === cartItem.id);\n    const elementsIndex = cart.findIndex(\n      (element) => element.id == cartItem.id\n    );\n    console.log(elementsIndex);\n    console.log(found);\n    if (elementsIndex >= 0) {\n      console.log(\"count added\");\n      cart[elementsIndex].amount += cartItem.amount;\n    } else {\n      console.log(\"new added\");\n      cart.push(cartItem);\n    }\n    console.log(\"before updating to the state\", cart);\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState(cart);\n    console.log(\"this is bottom of add to cart  \", this.state.cart);\n  };\n  removeFromCart=(cartItem)=>{\n\n    let cart = this.state.cart;\n    const elementsIndex = cart.findIndex(\n      (element) => element.id == cartItem.id\n    );\n    console.log(elementsIndex)\n    cart.splice(elementsIndex, 1);\n\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      this.setState(cart);\n  }\n\nchangingQuantity=(details)=>{\n  console.log(\"change in quantity called\",details.direction)\n\n\n  let cart = this.state.cart;\n  const elementsIndex = cart.findIndex(\n    (element) => element.id == details.id\n  );\n  console.log(elementsIndex)\nif(details.direction === \"increase\"){\n    cart[elementsIndex].amount += 1;\n}else{\n  cart[elementsIndex].amount -= 1;\n  if(cart[elementsIndex].amount === 0){\n    cart.splice(elementsIndex, 1);\n  }\n}\n\nlocalStorage.setItem(\"cart\", JSON.stringify(cart));\nthis.setState(cart);\n}\n\nAddProducts = (id,product) => {\n  console.log(id,product)\n  const sentToBackend =  axios\n      .post(\"/addproducts\", {id,product }).then((res)=>{\n  console.log(res.data)\n      })\n\n  };\n\n  ShowAllProducts=()=>{\n    console.log(\"show all products called\")\n  }\n\n  logout = () => {\n    console.log(this.state.user);\n    console.log(\"logout called\");\n    // e.preventDefault();\n    let admin = this.state.admin;\n    admin = false;\n    this.setState({admin})\n    localStorage.setItem(\"admin\", (admin));\n\n    this.setState({ user: \"\" });\n    localStorage.removeItem(\"user\");\n  };\n}\n","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/CartPage.js",["57","58","59"],"import { render } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport CartItem from \"./CartItem\";\nimport withContext from \"../withContext\";\n\nconst Cart = (props) => {\n  const { cart } = props.context;\n  console.log(\"from the cart page\", cart);\n\n  return (\n    <>\n      <div className=\"hero is-primary\">\n        <div className=\"hero-body container\">\n          <h4 className=\"title\"> Our Shopping cart</h4>\n        </div>\n      </div>\n      <br />\n      <div className=\"container\">\n        <div className=\"column columns is-multiline\">\n          {cart[0] && cart.length ? (\n            cart.map((cart, index) => <CartItem cartItem={cart} key={index} removeFromCart={props.context.removeFromCart} changingQuantity={props.context.changingQuantity}/>)\n           ) : (\n            <div className=\"column\">\n              <span className=\"title has-text-grey-light\">\n                No products found!\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withContext(Cart);\n","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/Context.js",[],"/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/ProductList.js",["60"],"import React from \"react\";\nimport withContext from \"../withContext\";\nimport ProductItem from \"./ProductItem\";\nimport Badge from \"react-bootstrap\";\n\nconst ProductList = (props) => {\n  const { products } = props.context;\n\n  return ( \n    <>\n      <div className=\"hero is-primary\">\n        <div className=\"hero-body container\">\n          <h4 className=\"title\"> Our Products</h4>\n        </div>\n      </div>\n      <br />\n      <div className=\"container\">\n        <div className=\"column columns is-multiline\">\n          {products && products.length ? (\n            products.map((product, index) => (\n              <ProductItem\n                product={product}\n                key={index}\n                addToCart={props.context.addToCart}\n              />\n            ))\n          ) : (\n            <div className=\"column\">\n              <span className=\"title has-text-grey-light\">\n                No products found!\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default withContext(ProductList);\n","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/Login.js",["61","62"],"import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport withContext from \"../withContext\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nclass Login extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n   \n  componentDidMount(){\n  console.log(this.props.context.user);\n  console.log(this.props.context.products)\n  }\n\n  handleChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value, error: \"\" });\n\n  login = (e) => {\n    e.preventDefault();\n    const { username, password } = this.state;\n    console.log(username, password);\n    if (!username || !password) {\n      console.log(\"fill the form\");\n      return this.setState({ error: \"fill the required fields\" });\n    }\n    this.props.context.login(username, password).then((loggedIn) => {\n      if (!loggedIn) {\n        this.setState({ error: \"Invalid credentials\" });\n      } else{\n        \n      }\n    });\n  };\n  \n  render() {\n    return (\n      <>\n      <Form onSubmit={this.login}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"username\"\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n           \n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            onChange={this.handleChange}\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <div>\n          {\" \"}\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </Form>\n      </>\n    )\n  }\n}\nexport default withContext(Login);\n","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/AddProducts.js",["63","64","65","66","67","68","69","70","71"],"import react, { Component } from \"react\";\nimport withContext from \"../withContext\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst initState = {\n  name: \"\",\n  price: \"\",\n  stock: \"\",\n  image: \"\",\n  shortDesc: \"\",\n  descriptio: \"\",\n};\n\nclass AddProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initState;\n  }\n\n  save = () => {\n    const { name, price, stock, image, shortDesc, description } = this.state;\n    console.log(\"save called\");\n    if (name && price) {\n      console.log(name, price, description);\n      const id =\n        Math.random().toString(36).substring(2) + Date.now().toString(36);\n      console.log(id);\n      this.props.context.AddProducts(\n        id,\n        {\n          name,\n          price,\n          stock,\n          image,\n          shortDesc,\n          description,\n        },\n        () => this.setState(initState)\n      );\n      this.setState({\n        flash: {\n          status: \"in-success\",\n          msg: \"successfully updated to the server\",\n        },\n      });\n    } else {\n      this.setState({\n        flash: {\n          status: \"in-danger\",\n          msg: \"please fill the name and th price\",\n        },\n      });\n    }\n  };\n  handleChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value, error: \"\" });\n\n  render() {\n    const { name, price, stock, shortDesc, description } = this.state;\n    const { user } = this.props.context;\n\n    return (\n      <>\n        \n        <h4> Add Products </h4>\n        <Form onSubmit={this.save}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name of the Product\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"price\"\n              type=\"number\"\n              placeholder=\"price\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>stock</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"stock\"\n              type=\"number\"\n              placeholder=\"stock\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Image URL</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"image\"\n              type=\"text\"\n              placeholder=\"Image URL\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>shortDesc</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"shortDesc\"\n              placeholder=\"Short description\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Description\"\n            />\n          </Form.Group>\n\n          <Button onClick={this.save}>Submit</Button>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default withContext(AddProducts);\n","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/ProductItem.js",[],"/Users/adhnanasharaf/Projects/React/ecommerse/client/src/withContext.js",["72"],"import React from \"react\"\nimport context from \"react-bootstrap/esm/AccordionContext\"\nimport Context from './Context'\n\nconst withContext = WrappedComponent=>{\nconst WithHOC =props =>{\n    return(\n        <Context.Consumer>\n            {context=><WrappedComponent {...props} context = {context} />}\n        </Context.Consumer>\n    )\n}\nreturn WithHOC;\n}\nexport default withContext;","/Users/adhnanasharaf/Projects/React/ecommerse/client/src/components/CartItem.js",[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"77","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":7},{"ruleId":"73","severity":1,"message":"78","line":18,"column":8,"nodeType":"75","messageId":"76","endLine":18,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":19,"column":10,"nodeType":"75","messageId":"76","endLine":19,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":59,"column":27,"nodeType":"82","messageId":"83","endLine":59,"endColumn":49,"fix":"84"},{"ruleId":"85","severity":1,"message":"86","line":208,"column":31,"nodeType":"87","messageId":"88","endLine":208,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":228,"column":31,"nodeType":"87","messageId":"88","endLine":228,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":244,"column":29,"nodeType":"87","messageId":"88","endLine":244,"endColumn":31},{"ruleId":"73","severity":1,"message":"89","line":262,"column":9,"nodeType":"75","messageId":"76","endLine":262,"endColumn":22},{"ruleId":"73","severity":1,"message":"79","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":25},{"ruleId":"73","severity":1,"message":"90","line":2,"column":27,"nodeType":"75","messageId":"76","endLine":2,"endColumn":36},{"ruleId":"73","severity":1,"message":"91","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"92","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":15},{"ruleId":"73","severity":1,"message":"93","line":4,"column":17,"nodeType":"75","messageId":"76","endLine":4,"endColumn":25},{"ruleId":"73","severity":1,"message":"94","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"95","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":13},{"ruleId":"73","severity":1,"message":"93","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":18},{"ruleId":"73","severity":1,"message":"96","line":61,"column":13,"nodeType":"75","messageId":"76","endLine":61,"endColumn":17},{"ruleId":"73","severity":1,"message":"97","line":61,"column":19,"nodeType":"75","messageId":"76","endLine":61,"endColumn":24},{"ruleId":"73","severity":1,"message":"98","line":61,"column":26,"nodeType":"75","messageId":"76","endLine":61,"endColumn":31},{"ruleId":"73","severity":1,"message":"99","line":61,"column":33,"nodeType":"75","messageId":"76","endLine":61,"endColumn":42},{"ruleId":"73","severity":1,"message":"100","line":61,"column":44,"nodeType":"75","messageId":"76","endLine":61,"endColumn":55},{"ruleId":"73","severity":1,"message":"101","line":62,"column":13,"nodeType":"75","messageId":"76","endLine":62,"endColumn":17},{"ruleId":"73","severity":1,"message":"102","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'jwt_decode' is defined but never used.","'render' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property ShowAllProducts.","MemberExpression","unexpectedWhitespace",{"range":"103","text":"104"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sentToBackend' is assigned a value but never used.","'useEffect' is defined but never used.","'Badge' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'react' is defined but never used.","'axios' is defined but never used.","'name' is assigned a value but never used.","'price' is assigned a value but never used.","'stock' is assigned a value but never used.","'shortDesc' is assigned a value but never used.","'description' is assigned a value but never used.","'user' is assigned a value but never used.","'context' is defined but never used.",[1202,1205],"."]
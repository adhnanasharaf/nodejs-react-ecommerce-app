{"ast":null,"code":"var _jsxFileName = \"/Users/adhnanasharaf/Projects/React/ecommerse/src/components/AddProducts.js\";\nimport react, { Component } from \"react\";\nimport withContext from \"../withContext\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initState = {\n  name: \"\",\n  price: \"\",\n  stock: \"\",\n  shortDesc: \"\",\n  descriptio: \"\"\n};\n\nclass AddProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.save = () => {\n      const {\n        name,\n        price,\n        stock,\n        shortDesc,\n        description\n      } = this.state;\n      console.log(\"save called\");\n\n      if (name && price) {\n        console.log(name, price, description);\n        const id = Math.random().toString(36).substring(2) + Date.now().toString(36);\n        console.log(id); // await axios.post(\"https://localhost:3001/products\", {\n        //   id,\n        //   name,\n        //   price,\n        //   stock,\n        //   shortDesc,\n        //   description,\n        // });\n        // this.props.context.AddProducts(\n        //   {\n        //     name,\n        //     price,\n        //     stock,\n        //     shortDesc,\n        //     description,\n        //   },\n        //   () => this.setState(initState)\n        // );\n        // this.setState({\n        //   flash: {\n        //     status: \"in-success\",\n        //     msg: \"successfully updated to the server\",\n        //   },\n        // });\n      } else {// this.setState({\n          //   flash: {\n          //     status: \"in-danger\",\n          //     msg: \"please fill the name and th price\",\n          //   },\n          // });\n        }\n    };\n\n    this.handleChange = e => this.setState({\n      [e.target.name]: e.target.value,\n      error: \"\"\n    });\n\n    this.state = initState;\n  }\n\n  componentDidMount() {\n    if (this.props.context.user) {\n      console.log(\"user present\");\n    } else {\n      console.log(\"user absent\");\n    }\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      stock,\n      shortDesc,\n      description\n    } = this.state;\n    const {\n      user\n    } = this.props.context;\n    return !(user && user.accessLevel < 1) ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" Add Products \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.save,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Name of the Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            name: \"price\",\n            type: \"number\",\n            placeholder: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            name: \"stock\",\n            type: \"number\",\n            placeholder: \"stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"shortDesc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            type: \"text\",\n            name: \"shortDesc\",\n            placeholder: \"Short description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: this.handleChange,\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.save,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withContext(AddProducts);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/adhnanasharaf/Projects/React/ecommerse/src/components/AddProducts.js"],"names":["react","Component","withContext","axios","Redirect","Form","Button","initState","name","price","stock","shortDesc","descriptio","AddProducts","constructor","props","save","description","state","console","log","id","Math","random","toString","substring","Date","now","handleChange","e","setState","target","value","error","componentDidMount","context","user","render","accessLevel"],"mappings":"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","sourcesContent":["import react, { Component } from \"react\";\nimport withContext from \"../withContext\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst initState = {\n  name: \"\",\n  price: \"\",\n  stock: \"\",\n  shortDesc: \"\",\n  descriptio: \"\",\n};\n\nclass AddProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initState;\n  }\n\n  componentDidMount(){\n      if(this.props.context.user){\n          console.log(\"user present\")\n      }else{\n          console.log(\"user absent\")\n      }\n  }\n  save = () => {\n    const { name, price, stock, shortDesc, description } = this.state;\n    console.log(\"save called\");\n    if (name && price) {\n      console.log(name, price, description);\n      const id =\n        Math.random().toString(36).substring(2) + Date.now().toString(36);\n      console.log(id);\n      // await axios.post(\"https://localhost:3001/products\", {\n      //   id,\n      //   name,\n      //   price,\n      //   stock,\n      //   shortDesc,\n      //   description,\n      // });\n      // this.props.context.AddProducts(\n      //   {\n      //     name,\n      //     price,\n      //     stock,\n      //     shortDesc,\n      //     description,\n      //   },\n      //   () => this.setState(initState)\n      // );\n      // this.setState({\n      //   flash: {\n      //     status: \"in-success\",\n      //     msg: \"successfully updated to the server\",\n      //   },\n      // });\n    } else {\n      // this.setState({\n      //   flash: {\n      //     status: \"in-danger\",\n      //     msg: \"please fill the name and th price\",\n      //   },\n      // });\n    }\n  };\n  handleChange = (e) =>\n    this.setState({ [e.target.name]: e.target.value, error: \"\" });\n\n  render() {\n    const { name, price, stock, shortDesc, description } = this.state;\n    const { user } = this.props.context;\n\n    return (\n      !(user && user.accessLevel < 1) ? (\n        <Redirect to=\"/\" />\n      ) : (\n      <>\n        <h4> Add Products </h4>\n        <Form onSubmit={this.save}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name of the Product\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Price</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"price\"\n              type=\"number\"\n              placeholder=\"price\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>stock</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              name=\"stock\"\n              type=\"number\"\n              placeholder=\"stock\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>shortDesc</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"shortDesc\"\n              placeholder=\"Short description\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Description\"\n            />\n          </Form.Group>\n\n          <Button onClick={this.save}>Submit</Button>\n        </Form>\n      </>\n    )\n    )\n  }\n}\n\nexport default withContext(AddProducts);\n"]},"metadata":{},"sourceType":"module"}